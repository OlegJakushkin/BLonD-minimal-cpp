 contrib/CMakeLists.txt | 12 +++++++-----
 gsl_version.h          | 26 ++++++++++++++++++++++++++
 2 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/contrib/CMakeLists.txt b/contrib/CMakeLists.txt
index 0574403..6a39ff1 100644
--- a/contrib/CMakeLists.txt
+++ b/contrib/CMakeLists.txt
@@ -1,15 +1,17 @@
 # CMake build script for the GNU Scientific Library.
 
-cmake_minimum_required(VERSION 2.6)
+cmake_minimum_required(VERSION 2.8)
 project(GSL)
+include(CheckCXXCompilerFlag)
 
+set(POSITION_INDEPENDENT_CODE True)
 set(PACKAGE "gsl")
 set(PACKAGE_NAME ${PACKAGE})
 set(PACKAGE_TARNAME ${PACKAGE})
 set(PACKAGE_BUGREPORT "")
 set(PACKAGE_URL "")
 set(LT_OBJDIR ".libs/")
-
+set(DO_TESTS "True")
 # The following part of config.h is hard to derive from configure.ac.
 string(REGEX MATCHALL "[^\n]*\n" CONFIG
 "/* Define if you have inline with C99 behavior */
@@ -505,6 +507,16 @@ ${CONFIG_OUT}")
 include_directories(${GSL_BINARY_DIR} ${GSL_SOURCE_DIR})
 add_definitions(-DHAVE_CONFIG_H)
 
+check_cxx_compiler_flag(-fPIC COMPILER_HAS_FPIC)
+if(COMPILER_HAS_FPIC)
+    add_definitions(-fPIC)
+endif()
+
+message(STATUS "CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}")
+message(STATUS "CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG}")
+message(STATUS "CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE}")
+message(STATUS "CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS}")
+
 include(CheckCCompilerFlag)
 if (GSL_DISABLE_WARNINGS)
   # Disable additional warnings.
@@ -546,7 +558,7 @@ file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/copy-headers.cmake "
   file(MAKE_DIRECTORY gsl)
   foreach (path ${GSL_HEADER_PATHS})
     get_filename_component(filename \${path} NAME)
-    configure_file(\${path} ${GSL_BINARY_DIR}/gsl/\${filename} COPY_ONLY)
+    configure_file(\${path} ${GSL_BINARY_DIR}/gsl/\${filename} COPYONLY)
   endforeach ()")
 
 add_custom_command(OUTPUT ${GSL_HEADERS}
@@ -582,13 +594,15 @@ foreach (dir "." ${dirs})
         set(GSL_SOURCES ${GSL_SOURCES} ${SOURCES})
       endif ()
     elseif (line MATCHES "^test.*_SOURCES[ \t]*=")
-      get_sources(${dir} "${line}" SOURCES)
-      string(REGEX REPLACE "(.*)_SOURCES.*" "\\1" suffix ${line})
-      add_gsl_test("${dir}_${suffix}" ${SOURCES})
+      if(${DO_TESTS} EQUAL "True")
+        get_sources(${dir} "${line}" SOURCES)
+        string(REGEX REPLACE "(.*)_SOURCES.*" "\\1" suffix ${line})
+        add_gsl_test("${dir}_${suffix}" ${SOURCES})
+      endif()
     endif ()
   endforeach ()
 endforeach ()
-
+message(STATUS ${DO_TESTS})
 add_library(gsl ${GSL_SOURCES})
 add_dependencies(gsl copy-headers)
 
diff --git a/gsl_version.h b/gsl_version.h
new file mode 100644
index 0000000..6fd5ede
--- /dev/null
+++ b/gsl_version.h
@@ -0,0 +1,26 @@
+#ifndef __GSL_VERSION_H__
+#define __GSL_VERSION_H__
+
+#include <gsl/gsl_types.h>
+
+#undef __BEGIN_DECLS
+#undef __END_DECLS
+#ifdef __cplusplus
+# define __BEGIN_DECLS extern "C" {
+# define __END_DECLS }
+#else
+# define __BEGIN_DECLS /* empty */
+# define __END_DECLS /* empty */
+#endif
+__BEGIN_DECLS
+
+
+#define GSL_VERSION "2.1"
+#define GSL_MAJOR_VERSION 2
+#define GSL_MINOR_VERSION 1
+
+GSL_VAR const char * gsl_version;
+
+__END_DECLS
+
+#endif /* __GSL_VERSION_H__ */
