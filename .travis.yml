#note: OpenCL instructions taken from https://github.com/peastman/openmm/blob/a7ce5784bc1d728ef7088c10308fa61b9c87e1a9/.travis.yml
sudo: true
language: cpp

os:
  - linux

compiler:
  - gcc
env:
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release
  global:
    - secure: inwXVLS3LG1+J8XHpN92Si87FLs8tT/SEWcg71us65o2AYDVCqqbXhFRpTqRY+K6ciT6IHd41LnmOaK1lID86YMcGUsQxvMJHbwMBCDPs+Qjup/g8xSjOZo11gnt9b2Jp5O/vEXOKdVoyBBXtR+J0JQ4ogS6VxvQyP2WDYH7FFFxsYZ83i93qCDUs7XnOwtN/f/wJMkMRQP+49Lp7EKWJEWXK87YM83fshQcLl2uOZfzdS9esN0QPXAW5W+jvB2EkvtjTy2EyDpdF1FMLLH50Uj4wP4A7FutnqfG4pRbhtdkDXqL429R9COyzXLdEiyTEoX7rbGLYqwfDpPC8huqUsp3NxdiSlx+ZdeBGySRkzcUmwKGzwapEgWEHu6Sujto1vLtU3tv0/Ywlf1nHsQ4jngnswtlVWi+pWPBVO5yyG3feKsj3fdvNdceszhU2Dj2e4zW6o9Ys7mJ41fbj1QsTSepVjcR/r9PU11948R+dyA37wF3lLdCApTbdI2PrVFUrQuHPr59s43ZGb52R24fdCi8Ao6Fd4oyJw9zLnhJDCehWDWYM5UcrC/mllzo8K1v4BqrEVlCeIBPx7SIsWUXjQ/gNv/JFp5+jYU1ibqz7VeS6ZhHd6tj6mUKkQ5Cqb9bkDkFBA48X0tet2qFQzuCoXUHqds/08odhMgVf0741Jc=
    - CUDA=true
    - CUDA_VERSION="7.5-18"
    - CMAKE_FLAGS="
             -DOPENCL_SDK_PATH=/usr/local/cuda-7.5/
             -DOPENCL_LIBRARY=/usr/local/cuda-7.5/lib64/libOpenCL.so
             -DCUDA_CUDART_LIBRARY=/usr/local/cuda-7.5/lib64/libcudart.so
             -DCUDA_NVCC_EXECUTABLE=/usr/local/cuda-7.5/bin/nvcc
             -DCUDA_SDK_ROOT_DIR=/usr/local/cuda-7.5/
             -DCUDA_TOOLKIT_INCLUDE=/usr/local/cuda-7.5/include
             -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5/"
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
      - libreoffice/libreoffice-4-2
    packages:
      - cmake
      - cmake-data
      - gcc-4.8
      - g++-4.8
      - opencl-headers
      - valgrind
      - gcov-4.8
      - lcov
      - doxygen
      - graphviz

install:
  - pip install --user cpp-coveralls

cache:
  - apt
  - pip

before_install:
  - export CC=/usr/bin/gcc-4.8
  - export CXX=/usr/bin/g++-4.8
  - if [[ "$CUDA" == "true" ]]; then
      wget "http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA_VERSION}_amd64.deb";
      sudo dpkg -i cuda-repo-ubuntu1404_${CUDA_VERSION}_amd64.deb;
      sudo apt-get update -qq;
      export CUDA_APT=${CUDA_VERSION%-*};
      export CUDA_APT=${CUDA_APT/./-};
      sudo apt-get install -y cuda-drivers cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT} cuda-cufft-dev-${CUDA_APT};
      sudo apt-get clean;
      export CUDA_HOME=/usr/local/cuda-${CUDA_VERSION%%-*};
      export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH};
      export PATH=${CUDA_HOME}/bin:${PATH};
    fi

before_script:
  - mkdir build
  - cd build
  - cmake -DWITH_FFTW=True -DWITH_GOOGLETEST=True -DWITH_BENCHMARK=True  -DBUILD_EXTERNALS=True -DOPENCL_SDK_PATH=/usr/local/cuda-7.5/ -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

script:
  - cmake --build . -- -j2 VERBOSE=1
  - ctest -VV

after_success:
 - coveralls --help
 - coveralls --gcov gcov-4.8  --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*unit-tests/.*.cpp.*" -E "/usr/include/.*"
 - ./TC1_Acceleration --threads 4
 - if [ "$BUILD_TYPE" == "Debug" ]; then
     cd ../ ;
     doxygen Doxyfile ;
     export BUILD_PATH=`pwd` ;
     cd "$TRAVIS_BUILD_DIR" ;
     git clone --branch=gh-pages --recursive https://github.com/OlegJakushkin/BLonD-minimal-cpp.git web ;
     cd web ;
     cp -rf $BUILD_PATH/documentation/html/* ./ ;
     git add -A ;
     git -c user.name='travis' -c user.email='travis' commit -am "documentation update" ;
     git push -f -q https://OlegJakushkin:$GITHUB_API_KEY@github.com/OlegJakushkin/BLonD-minimal-cpp.git gh-pages ;
   fi

